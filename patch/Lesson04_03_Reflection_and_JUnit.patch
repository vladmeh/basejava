Index: test/ru/javawebinar/basejava/storage/AbstractArrayStorageTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- test/ru/javawebinar/basejava/storage/AbstractArrayStorageTest.java	(date 1557008746815)
+++ test/ru/javawebinar/basejava/storage/AbstractArrayStorageTest.java	(date 1557008746815)
@@ -0,0 +1,62 @@
+package ru.javawebinar.basejava.storage;
+
+import org.junit.Assert;
+import org.junit.Before;
+import org.junit.Test;
+import ru.javawebinar.basejava.exception.NotExistStorageException;
+import ru.javawebinar.basejava.model.Resume;
+
+/**
+ * @author Vladimir Mikhaylov <vladmeh@gmail.com> on 05.05.2019.
+ * @link https://github.com/vladmeh/basejava
+ */
+
+public class AbstractArrayStorageTest {
+
+    private static final String UUID_1 = "uuid1";
+    private static final String UUID_2 = "uuid2";
+    private static final String UUID_3 = "uuid3";
+    private Storage storage;
+
+    @Before
+    public void setUp() {
+        storage.clear();
+        storage.save(new Resume(UUID_1));
+        storage.save(new Resume(UUID_2));
+        storage.save(new Resume(UUID_3));
+    }
+
+    @Test
+    public void size() {
+        Assert.assertEquals(3, storage.size());
+    }
+
+    @Test
+    public void getAll() {
+    }
+
+    @Test
+    public void get() {
+    }
+
+    @Test
+    public void clear() {
+    }
+
+    @Test
+    public void update() {
+    }
+
+    @Test
+    public void save() {
+    }
+
+    @Test
+    public void delete() {
+    }
+
+    @Test(expected = NotExistStorageException.class)
+    public void getNotExist() {
+        storage.get("dummy");
+    }
+}
\ No newline at end of file
Index: test/ru/javawebinar/basejava/storage/ArrayStorageTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- test/ru/javawebinar/basejava/storage/ArrayStorageTest.java	(date 1557008810912)
+++ test/ru/javawebinar/basejava/storage/ArrayStorageTest.java	(date 1557008810912)
@@ -0,0 +1,10 @@
+package ru.javawebinar.basejava.storage;
+
+/**
+ * @author Vladimir Mikhaylov <vladmeh@gmail.com> on 05.05.2019.
+ * @link https://github.com/vladmeh/basejava
+ */
+
+public class ArrayStorageTest extends AbstractArrayStorageTest {
+
+}
\ No newline at end of file
Index: src/ru/javawebinar/basejava/MainReflection.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/ru/javawebinar/basejava/MainReflection.java	(date 1557007714908)
+++ src/ru/javawebinar/basejava/MainReflection.java	(date 1557007714908)
@@ -0,0 +1,23 @@
+package ru.javawebinar.basejava;
+
+import ru.javawebinar.basejava.model.Resume;
+
+import java.lang.reflect.Field;
+
+/**
+ * @author Vladimir Mikhaylov <vladmeh@gmail.com> on 05.05.2019.
+ * @link https://github.com/vladmeh/basejava
+ */
+
+public class MainReflection {
+    public static void main(String[] args) throws IllegalAccessException {
+        Resume r = new Resume();
+        Field field = r.getClass().getDeclaredFields()[0];
+        field.setAccessible(true);
+        System.out.println(field.getName());
+        System.out.println(field.get(r));
+        field.set(r, "new_uuid");
+        // TODO : invoke r.toString via reflection
+        System.out.println(r);
+    }
+}
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .gitignore	(date 1557004521000)
+++ .gitignore	(date 1557008378631)
@@ -2,6 +2,4 @@
 out
 *.iml
 log
-
-
-
+lib
