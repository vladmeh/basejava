Index: src/ru/javawebinar/basejava/storage/Storage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/ru/javawebinar/basejava/storage/Storage.java	(date 1531088147181)
+++ src/ru/javawebinar/basejava/storage/Storage.java	(date 1531088147181)
@@ -0,0 +1,28 @@
+package ru.javawebinar.basejava.storage;
+
+import ru.javawebinar.basejava.model.Resume;
+
+import java.util.Arrays;
+
+/**
+ * Array based storage for Resumes
+ */
+public interface Storage {
+    void clear();
+
+    void update(Resume r);
+
+    void save(Resume r);
+
+    Resume get(String uuid);
+
+    void delete(String uuid);
+
+    /**
+     * @return array, contains only Resumes in storage (without null)
+     */
+
+    Resume[] getAll();
+
+    int size();
+}
Index: src/ru/javawebinar/basejava/storage/ArrayStorage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/ru/javawebinar/basejava/storage/ArrayStorage.java	(date 1531087490000)
+++ src/ru/javawebinar/basejava/storage/ArrayStorage.java	(date 1531088210369)
@@ -7,7 +7,7 @@
 /**
  * Array based storage for Resumes
  */
-public class ArrayStorage {
+public class ArrayStorage implements Storage {
     private static final int STORAGE_LIMIT = 10000;
     private Resume[] storage = new Resume[STORAGE_LIMIT];
     private int size = 0;
Index: src/MainTestArrayStorage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/MainTestArrayStorage.java	(date 1531087490000)
+++ src/MainTestArrayStorage.java	(date 1531088210487)
@@ -1,11 +1,12 @@
 import ru.javawebinar.basejava.model.Resume;
 import ru.javawebinar.basejava.storage.ArrayStorage;
+import ru.javawebinar.basejava.storage.Storage;
 
 /**
  * Test for com.urise.webapp.storage.ru.javawebinar.basejava.storage.ArrayStorage
  */
 public class MainTestArrayStorage {
-    static final ArrayStorage ARRAY_STORAGE = new ArrayStorage();
+    static final Storage ARRAY_STORAGE = new ArrayStorage();
 
     public static void main(String[] args) {
         Resume r1 = new Resume();
Index: src/MainArray.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/MainArray.java	(date 1531087490000)
+++ src/MainArray.java	(date 1531088210428)
@@ -1,5 +1,6 @@
 import ru.javawebinar.basejava.model.Resume;
 import ru.javawebinar.basejava.storage.ArrayStorage;
+import ru.javawebinar.basejava.storage.Storage;
 
 import java.io.BufferedReader;
 import java.io.IOException;
@@ -9,7 +10,7 @@
  * Test for com.urise.webapp.storage.ru.javawebinar.basejava.storage.ArrayStorage
  */
 public class MainArray {
-    private final static ArrayStorage ARRAY_STORAGE = new ArrayStorage();
+    private final static Storage ARRAY_STORAGE = new ArrayStorage();
 
     public static void main(String[] args) throws IOException {
         BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
