Index: test/ru/javawebinar/basejava/storage/AbstractArrayStorageTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- test/ru/javawebinar/basejava/storage/AbstractArrayStorageTest.java	(revision 3b12dacb4f5295222fe315c8527f2dfeb29b836b)
+++ test/ru/javawebinar/basejava/storage/AbstractArrayStorageTest.java	(date 1557357341892)
@@ -17,16 +17,21 @@
 public abstract class AbstractArrayStorageTest {
 
     private static final String UUID_1 = "uuid1";
-    private static final Resume RESUME_1 = new Resume(UUID_1);
-
     private static final String UUID_2 = "uuid2";
-    private static final Resume RESUME_2 = new Resume(UUID_2);
-
     private static final String UUID_3 = "uuid3";
-    private static final Resume RESUME_3 = new Resume(UUID_3);
-
     private static final String UUID_4 = "uuid4";
-    private static final Resume RESUME_4 = new Resume(UUID_4);
+
+    private static final Resume RESUME_1;
+    private static final Resume RESUME_2;
+    private static final Resume RESUME_3;
+    private static final Resume RESUME_4;
+
+    static {
+        RESUME_1 = new Resume(UUID_1);
+        RESUME_2 = new Resume(UUID_2);
+        RESUME_3 = new Resume(UUID_3);
+        RESUME_4 = new Resume(UUID_4);
+    }
 
     private final Storage storage;
 
Index: src/ru/javawebinar/basejava/MainCollections.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/ru/javawebinar/basejava/MainCollections.java	(date 1557357252993)
+++ src/ru/javawebinar/basejava/MainCollections.java	(date 1557357252993)
@@ -0,0 +1,62 @@
+package ru.javawebinar.basejava;
+
+import ru.javawebinar.basejava.model.Resume;
+
+import java.util.*;
+
+/**
+ * @author Vladimir Mikhaylov <vladmeh@gmail.com> on 09.05.2019.
+ * @link https://github.com/vladmeh/basejava
+ */
+
+public class MainCollections {
+    private static final String UUID_1 = "uuid1";
+    private static final Resume RESUME_1 = new Resume(UUID_1);
+
+    private static final String UUID_2 = "uuid2";
+    private static final Resume RESUME_2 = new Resume(UUID_2);
+
+    private static final String UUID_3 = "uuid3";
+    private static final Resume RESUME_3 = new Resume(UUID_3);
+
+    private static final String UUID_4 = "uuid4";
+    private static final Resume RESUME_4 = new Resume(UUID_4);
+
+    public static void main(String[] args) {
+        Collection<Resume> collection = new ArrayList<>();
+        collection.add(RESUME_1);
+        collection.add(RESUME_2);
+        collection.add(RESUME_3);
+
+        for (Resume r : collection) {
+            System.out.println(r);
+            if (Objects.equals(r.getUuid(), UUID_1)) {
+//                collection.remove(r);
+            }
+        }
+
+        Iterator<Resume> iterator = collection.iterator();
+        while (iterator.hasNext()) {
+            Resume r = iterator.next();
+            System.out.println(r);
+            if (Objects.equals(r.getUuid(), UUID_1)) {
+                iterator.remove();
+            }
+        }
+        System.out.println(collection.toString());
+
+        Map<String, Resume> map = new HashMap<>();
+        map.put(UUID_1, RESUME_1);
+        map.put(UUID_2, RESUME_2);
+        map.put(UUID_3, RESUME_3);
+
+        // Bad!
+        for (String uuid : map.keySet()) {
+            System.out.println(map.get(uuid));
+        }
+
+        for (Map.Entry<String, Resume> entry : map.entrySet()) {
+            System.out.println(entry.getValue());
+        }
+    }
+}
