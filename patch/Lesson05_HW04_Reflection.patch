Index: src/ru/javawebinar/basejava/MainReflection.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/ru/javawebinar/basejava/MainReflection.java	(revision 1cbf1b4377054f96d2061d1a7285675e59b2039d)
+++ src/ru/javawebinar/basejava/MainReflection.java	(date 1557082967365)
@@ -3,6 +3,8 @@
 import ru.javawebinar.basejava.model.Resume;
 
 import java.lang.reflect.Field;
+import java.lang.reflect.InvocationTargetException;
+import java.lang.reflect.Method;
 
 /**
  * @author Vladimir Mikhaylov <vladmeh@gmail.com> on 05.05.2019.
@@ -10,14 +12,19 @@
  */
 
 public class MainReflection {
-    public static void main(String[] args) throws IllegalAccessException {
+    public static void main(String[] args) throws IllegalAccessException, NoSuchMethodException, InvocationTargetException {
         Resume r = new Resume();
-        Field field = r.getClass().getDeclaredFields()[0];
+        Class<? extends Resume> resumeClass = r.getClass();
+
+        Field field = resumeClass.getDeclaredFields()[0];
+
         field.setAccessible(true);
         System.out.println(field.getName());
         System.out.println(field.get(r));
         field.set(r, "new_uuid");
-        // TODO : invoke r.toString via reflection
-        System.out.println(r);
+
+        Method method = resumeClass.getMethod("toString");
+        Object result = method.invoke(r);
+        System.out.println(result);
     }
 }
